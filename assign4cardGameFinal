<script>
	var confirmRule, guess, guessTemp, answerVal, answerColor, currentCard, nextCard, numb, loop = "true";

	function Deck() {
		this.cards = [];
		this.count = function() {
				return this.cards.length;
		}
		this.init = function() {
			//start loop of suits (s)
			for(s=1; s<=4; s++){
				//start loop of value (v)
				for(v=1; v<=13; v++){
					this.cards.push(new Card(v,s));
				}
			}
		}
	}

	function Card(val, suit) {
		//Assign card value and swap the 10, 11, 12, 13 to J, Q, K, A
		if(val == 10) {
			this.val = val;
			this.valDisplay = "J";
		}else if(val == 11) {
			this.val = val;
			this.valDisplay = "Q";
		}else if(val == 12) {
			this.val = val;
			this.valDisplay = "K";
		}else if (val == 13) {
			this.val = val;
			this.valDisplay = "A";
		}else {
			this.val = val;
			this.valDisplay = val + 1;
		}

		//Assign card suit weight (Not needed for this assignment)
		//this.suitWeight = suit;
		//Assign card symbol & card color according to suit weight
		if(suit == 1) {
			this.suitSymbol = "Daimond";
			this.suitColor = "RED";
		}else if(suit == 2) {
			this.suitSymbol = "Club";
			this.suitColor = "BLACK";
		}else if(suit == 3) {
			this.suitSymbol = "Heart";
			this.suitColor = "RED";
		}else if(suit == 4) {
			this.suitSymbol = "Spade";
			this.suitColor = "BLACK";
		}
	}
	//game Object of methods on confirm game rules, pull random card, prompt for guesses, card remain
	var Game = {
		//1) Confirm game rules
		ConfirmMessage: function() {
			return confirm("Card Guessing Game instruction:\n\nGuess if next card is either Red/Black or Bigger/Lesser/Equal compare to the current card. Ace been the biggest.\n\nWinning condition:\n\n1) Correct guesses OR\n2) Correct on full deck of cards.\n\nLoses if any guess is wrong.\nGood Luck!!");
		},
		//2) generate a random number rang between the count *then pull a cards off the array and remove the card and move rest of cards arry forward.
		getRandomCard: function(numberOfCards) {
			numb = Math.floor(Math.random() * (numberOfCards));
			return newDeck.cards.splice(numb,1);
		},
		//3) compare current card with next card
		compareCard: function(cardCurrentA, cardNextA) {
			if(cardCurrentA.val > cardNextA.val) {
				return "lesser";
			}else if(cardCurrentA.val < cardNextA.val) {
				return "bigger";
			}else if(cardCurrentA.val === cardNextA.val) {
				return "equal";
			}
		},
		//4) Prompt for player guess input - dissplay current card + card left 
		playerGuess: function(cardCurrentG) {
			while(loop == "true"){
				guessTemp = prompt("Card left in the deck: " + newDeck.count() + "\n\nCurrent Card:   " + cardCurrentG.suitColor + "  " + cardCurrentG.suitSymbol + "  " + cardCurrentG.valDisplay + "\n\nPlease guess if next card is either Red/Black or Bigger/Lesser/Equal compare to current Card:");
				//check for no input (guessTemp = "null")
				if(guessTemp != null){
					//Conver answer to lower case
					guessTemp = guessTemp.toLowerCase();
					// check input for string && Red||Black||Bigger||Lessr
					if(typeof guessTemp === "string" && guessTemp === "red" || guessTemp === "black" || guessTemp === "bigger" || guessTemp === "lesser" || guessTemp === "equal") {
						return guessTemp;
						break;
					}else{
						alert("Please input Red/Black/Bigger/Lessr/equal Only. Thank you.");
						loop = "true";	
					}
				}else{
					alert("GAME CANCELED\n\nThank you for playing!!");
					break;
				}
			} // LOOP
		}
	};

	//Creat new Deck()
	newDeck = new Deck();
	newDeck.init();

	/*Game starts here -- Guessing card game instruction:
	Begin with a random card draw from the Deck() and ask 
	for player input to guess if next card is either 
	Red/Block or Bigger/Lesser than current card.
	Winning condition 1) if the answer is correct or
	2) complete all Deck of cards. Loses if answer is wong.*/

	//confirm rules
	confirmRule = Game.ConfirmMessage();
	//if confirm = true Starts the game
	if(confirmRule == true){
		//pull random current card and remove from array, newDeck.count --
		currentCard = Game.getRandomCard(newDeck.count());
		//loop till finish all cards or wrong
		while(true){
			//ask for player guess (bigger/lesser/red/black) 
			guess = Game.playerGuess(currentCard[0]);
			//break our the loop when player input cancel.
			if(typeof guess == "undefined"){
				break;
			}else{
				//pull a random next card and remove from array, newDeck.count --
				nextCard = Game.getRandomCard(newDeck.count());
				//Conver color to lower case
				answerColor = nextCard[0].suitColor.toLowerCase();
				//Compare CurrentCard to NextCard and return string "bigger" or "lesser"
				answerVal = Game.compareCard(currentCard[0], nextCard[0]);
				//if(answer == guess) alert("you are right!!") and loop
				if(answerVal === guess || answerColor === guess){
					alert("You are right!!");
					//if newDeck.count not = 0
					if(newDeck.count() != 0) {
						// Assign the nextCard to become currentCard
						currentCard[0] = nextCard[0];
					}
					//if all correct on FULL DECK then break
					else{
					 	alert("\n\nCongradulation for completing the FULL deck!!\nYou Win!!");
						break;
					}		
				}
				 //else alert("Sorry you are wrong!") break out the loop
				 else {
				 	alert("GAME OVER\n\nsorry, you are wrong!\nNext card is: " + nextCard[0].suitColor + ", " + nextCard[0].val + ", " + nextCard[0].suitSymbol + ", " + nextCard[0].valDisplay + "\n\nThank you for playing"); 
				 	break;
				 }
			}
		} // LOOP
	}
	 //else "Goodbye!"	
	 else {
		alert("Thank you for trying. Goodbye.");
	 }
</script>